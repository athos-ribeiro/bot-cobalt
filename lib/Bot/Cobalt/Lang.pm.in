package Bot::Cobalt::Lang;
our $VERSION = '0.011';

## Emitted events:
##  langset_loaded ($lang, $lang-specified, $path)
##
## Loads from __DATA__ first (added at build-time by Lang.pm.PL)
## This provides an up-to-date default English set in case the 
## on-disk langset is old / incomplete / broken / missing.

use 5.12.1;
use strictures 1;

use Carp;
use Moo;

use Bot::Cobalt::Common qw/:types/;
use Bot::Cobalt::Serializer;

use File::Spec;
use Try::Tiny;

## Configurable:
has 'lang_dir' => (
  required => 1,

  is  => 'rwp',
  isa => Str,
);

has 'lang' => (
  required => 1,
  
  is  => 'rwp',
  isa => Str,
);

has 'use_core' => (
  is  => 'rwp',
  isa => Bool,
  
  default => sub { 0 },
);

## Public:
has 'rpls' => (
  lazy => 1,
  
  is  => 'rwp',
  isa => HashRef,
  
  builder => '_build_rpl_hash',
);

## Private:
has '_full_lang_path' => (
  lazy => 1,
  
  is  => 'ro',
  isa => Str,
  
  builder => '_build_full_lang_path',
);

has '_core_set' => (
  lazy => 1,
  
  is  => 'ro',
  isa => HashRef,
  
  builder => '_build_core_set',
);

sub _build_full_lang_path {
  my ($self) = @_;
  
  my $file_path = $self->lang . ".yml" ;

  File::Spec->catfile(
    $self->lang_dir,
    $file_path
  )
}

sub _build_rpl_hash {
  my ($self) = @_;

  my $rpl_hash;

  ## Core (built-in) load; shallow copy:
  $rpl_hash = \%{ $self->_core_set->{RPL} }
    if $self->use_core;

  my $serializer = Bot::Cobalt::Serializer->new;
  
  my $croakable;
  
  my $loaded_set = try {
    $serializer->readfile( $self->_full_lang_path )
  } catch {
    ## croak() by default.
    ## If this is a core set load, return empty hash.
    if ( !$self->use_core ) {
      $croakable = "readfile() failure for ", $self->lang,
        "(", $self->_full_lang_path, "): ",
        $_ ;
      0
    } else {
      carp "Language load failure for ".$self->lang.": $_\n";
      { RPL => {} }
    }
  } or croak $croakable;

  if ( $self->use_core ) {
    my $rev_for_loaded  = $loaded_set->{SPEC}      // 0;
    my $rev_for_builtin = $self->_core_set->{SPEC} // 0;

    if ($rev_for_builtin > $rev_for_loaded) {
      warn("Appear to be loading a core language set, but the internal",
        " set has a higher SPEC number than the loaded set",
        " ($rev_for_builtin > $rev_for_loaded).\n",
        " You may want to update language sets.\n",
      );
    }

  }
  
  my $loaded_rpl_hash = $loaded_set->{RPL};

  confess "Language set loaded but no RPL hash found"
    unless ref $loaded_rpl_hash eq 'HASH';
  
  @{$rpl_hash}{ keys %$loaded_rpl_hash }
    = @{$loaded_set->{RPL}}{ keys %$loaded_rpl_hash } ;

  $rpl_hash
}

sub _build_core_set {
  my ($self) = @_;
  
  my $core_set_yaml = <DATA>;
  
  my $serializer = Bot::Cobalt::Serializer->new;
  
  $serializer->thaw( $core_set_yaml )
}

## FIXME tests
## FIXME fix Lang.pod also (should probably just move that sucker here)

### this module will have a langset appended at build-time
1;
__DATA__
