#!perl

use 5.12.1;
use strict;
use warnings;
use Carp;

use Cobalt::DB;

my($dbpath, $outpath);

use Getopt::Long;
GetOptions(
  help => sub {
    say "Usage: $0 --database=PATH --output=PATH"; 
    exit 0
  },
  
  'database=s' => \$dbpath,
  'input=s'    => \$dbpath,
  
  'output=s'   => \$outpath,
);

unless ($dbpath) {
  print "Path to database to be exported: \n > ";
  $dbpath = <STDIN>;
  chomp($dbpath);
}

croak "could not locate dbpath: $dbpath"
  unless -f $dbpath;

unless ($outpath) {
  print "Output path: \n > ";
  $outpath = <STDIN>;
  chomp($outpath);
}

if (-f $outpath) {
  print "Output path exists...\n";
  print "Press ENTER to continue, Ctrl+C to exit. ";
  <STDIN>;
  print "\n";
}

my $db = Cobalt::DB->new(
  File => $dbpath,
  LockFile => ".dbdump.lock",
);

$db->dbopen or croak "dbopen failure";
my $yaml = $db->dbdump or croak "dbdump failure";
$db->dbclose;

say "Writing YAML to $outpath";

open my $outfh, '>:encoding(UTF-8)', $outpath or croak "open failed: $!";
print $outfh $yaml;
close $outfh;

say "Done.";

__END__
=pod

=head1 NAME

cobalt2-dbdump - export Cobalt::DB databases to YAML

=head1 SYNOPSIS

  cobalt2-dbdump --database=/path/to/db --output=exported.yml

=head1 DESCRIPTION

A simple frontend to the dbdump functionality found in L<Cobalt::DB>.

Exports specified Cobalt::DB databases to YAML.

=head1 AUTHOR

Jon Portnoy <avenj@cobaltirc.org>

L<http://www.cobaltirc.org>

=cut
