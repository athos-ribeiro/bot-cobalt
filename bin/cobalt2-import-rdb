#!perl

use 5.12.1;
use strict;
use warnings;

use Cwd;

use Cobalt::Serializer;

STDOUT->autoflush(1);

say "This simplistic tool will convert darkbot/cobalt1 RDBs.";

print "Path to randstuff.ini: ";
my $randstuff_ini_path = <STDIN>;
chomp($randstuff_ini_path);

die "could not find randstuffs at $randstuff_ini_path\n"
  unless -e $randstuff_ini_path;

open my $rstuff_fh, '<', $randstuff_ini_path
  or die "could not open $randstuff_ini_path: $!\n";
my @randstuff_ini = <$rstuff_fh>;
close $rstuff_fh;

my $rdbref = { };
$rdbref->{main} = { };
my $idx = 0;
for my $item (@randstuff_ini) {
  ++$idx;
  $rdbref->{main}->{$idx} = {
    AddedBy => '-Imported',
    AddedAt => time,
    String => $item,
    Votes  => { Up => 0, Down => 0 },
  };
}

say "Added ".scalar @randstuff_ini." randstuffs from randstuff.ini";

say "We can attempt to add RDBs as well.";
say "We'll look for .rdb files in the specified directory.";
say "A blank line will skip RDBs.";
print "Path to RDB dir: ";
my $rdb_dir_path = <STDIN>;
chomp($rdb_dir_path);

if ($rdb_dir_path) {
  die "No such dir: $rdb_dir_path\n" unless -d $rdb_dir_path;

  my $oldcwd = getcwd();
  chdir $rdb_dir_path || die "Could not chdir to $rdb_dir_path\n";
  my @rdb_files = glob("*.rdb");
  
  for my $rdb_file (@rdb_files) {
    open my $rdb_fh, '<', $rdb_file
      or die "could not open $rdb_file: $!\n";
    my @current_rdb = <$rdb_fh>;
    close $rdb_fh;

    my $rdb_name = $rdb_file;
    $rdb_name =~ s/\.rdb$//;

    $idx = 0;
    for my $item (@current_rdb) {
      ++$idx;
      $rdbref->{$rdb_name}->{$idx} = {
        AddedBy => '-Imported',
        AddedAt => time,
        String => $item,
        Votes => { Up => 0, Down => 0 },
      };
      
    }
    say "RDB $rdb_name : ".scalar @current_rdb." items added";
  }
  
  chdir $oldcwd;
  say "Total RDBs: ".scalar keys %$rdbref;
}


say "Finished reading RDBs.";
say "Where should I write the imported DB?";
print "Path: ";
my $output_path = <STDIN>;
chomp($output_path);
$output_path ||= "imported-rdb.yml";
say "Writing $output_path";

my $ser = Cobalt::Serializer->new;
$ser->writefile($output_path, $rdbref);
